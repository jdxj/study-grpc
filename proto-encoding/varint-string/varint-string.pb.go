// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto-encoding/varint-string/varint-string.proto

package varint_string

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Test1 struct {
	A                    *string  `protobuf:"bytes,1,opt,name=A" json:"A,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Test1) Reset()         { *m = Test1{} }
func (m *Test1) String() string { return proto.CompactTextString(m) }
func (*Test1) ProtoMessage()    {}
func (*Test1) Descriptor() ([]byte, []int) {
	return fileDescriptor_025e4e43dd38f12f, []int{0}
}

func (m *Test1) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Test1.Unmarshal(m, b)
}
func (m *Test1) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Test1.Marshal(b, m, deterministic)
}
func (m *Test1) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Test1.Merge(m, src)
}
func (m *Test1) XXX_Size() int {
	return xxx_messageInfo_Test1.Size(m)
}
func (m *Test1) XXX_DiscardUnknown() {
	xxx_messageInfo_Test1.DiscardUnknown(m)
}

var xxx_messageInfo_Test1 proto.InternalMessageInfo

func (m *Test1) GetA() string {
	if m != nil && m.A != nil {
		return *m.A
	}
	return ""
}

func init() {
	proto.RegisterType((*Test1)(nil), "Test1")
}

func init() {
	proto.RegisterFile("proto-encoding/varint-string/varint-string.proto", fileDescriptor_025e4e43dd38f12f)
}

var fileDescriptor_025e4e43dd38f12f = []byte{
	// 79 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x32, 0x28, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x4d, 0xcd, 0x4b, 0xce, 0x4f, 0xc9, 0xcc, 0x4b, 0xd7, 0x2f, 0x4b, 0x2c, 0xca, 0xcc,
	0x2b, 0xd1, 0x2d, 0x2e, 0x29, 0xc2, 0xe0, 0xe9, 0x81, 0x95, 0x2a, 0x89, 0x72, 0xb1, 0x86, 0xa4,
	0x16, 0x97, 0x18, 0x0a, 0xf1, 0x70, 0x31, 0x3a, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x31,
	0x3a, 0x02, 0x02, 0x00, 0x00, 0xff, 0xff, 0x34, 0x76, 0x94, 0xfe, 0x49, 0x00, 0x00, 0x00,
}
